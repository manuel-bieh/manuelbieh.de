'use client';

import { Grid, Column, Header } from '@manuel-bieh/design-system';
import React from 'react';
import Link from 'next/link';
import { useTranslation } from 'next-i18next';
import { useRouter } from 'next/router';
import css from './PageHeader.module.css';

const routes: { [route: string]: string } = {
    home: '/',
    profile: '/profile',
    clients: '/clients',
    technologies: '/technologies',
    publications: '/publications',
};

const PageHeader = () => {
    const {
        t,
        i18n: { language },
    } = useTranslation();

    const { pathname } = useRouter();

    return (
        <>
            {/* <Head>
                <title>ManuelBieh.de</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <html lang={language} />
                <link rel="icon" href="/favicon.ico" />
            </Head> */}
            <Header className={css.wrapper}>
                <Grid centered>
                    <Column xs={12}>
                        <hgroup>
                            <h1>
                                <Link href="/">{t('header.title')}</Link>
                            </h1>
                            <h2>
                                {t('header.subhead')}
                                <br />
                                {t('header.subhead2')}
                            </h2>
                        </hgroup>
                    </Column>
                </Grid>
                <Grid centered style={{ marginBottom: -32 }}>
                    <Column xs={12}>
                        <nav>
                            <ul>
                                <li style={{ float: 'right' }}>
                                    {['de', 'en'].map((languageCode) =>
                                        languageCode === language ? (
                                            <span key={languageCode}>{languageCode.toUpperCase()}</span>
                                        ) : (
                                            <Link key={languageCode} href={pathname} locale={languageCode}>
                                                {languageCode.toUpperCase()}
                                            </Link>
                                        )
                                    )}
                                </li>
                                {Object.keys(routes).map((route: string) => (
                                    <li key={route}>
                                        <Link
                                            href={routes[route]}
                                            className={routes[route] === pathname ? css.active : ''}
                                        >
                                            {t(`navigation.${route}`)}
                                        </Link>
                                    </li>
                                ))}
                            </ul>
                        </nav>
                    </Column>
                </Grid>
            </Header>
        </>
    );
};

export default PageHeader;
